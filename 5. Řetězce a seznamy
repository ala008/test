##################################
# 5.1.1. Součet, maximum a hledání
##################################
def my_sum(numbers):
    soucet = 0
    for number in numbers:
        soucet += number
    return soucet

def my_max(numbers):
    big = 0
    for number in numbers:
        if big < number:
            big = number
    return big

def my_in(x, array):
    for member in array:
        if member == x:
            return True
    return False

print(my_sum([6, 5, 11, 8]))    # 30
print(my_max([6, 5, 11, 8]))    # 11
print(my_in(5, [6, 5, 11, 8]))  # True
print(my_in(4, [6, 5, 11, 8]))  # False

################################
# 5.1.2. Součin nenulových čísel
################################
def nonzero_product(numbers):
    soucin = 1
    for number in numbers:
        if number > 0:
            soucin *= number
    return soucin

print(nonzero_product([0, 2, 3, 0, 0, 3]))    # 18
print(nonzero_product([0, 0, 0, 0]))          # 1

################################################
# 5.1.3. Modifikace vs. vytváření nového seznamu
################################################
def double_all(numbers):
    for i in range(len(numbers)):
        numbers[i] *= 2
    return numbers

def create_doubled(numbers):
    copy = list(numbers)
    for i in range(len(copy)):
        copy[i] *= 2
    return copy

a = [1, 4, 2, 5]
double_all(a)
print(a)  # [2, 8, 4, 10]

a = [1, 4, 2, 5]
b = create_doubled(a)
print(a)  # [1, 4, 2, 5]
print(b)  # [2, 8, 4, 10]

##################################
# 5.1.4. Zploštění
##################################
def flatten(lists):
    seznam = []
    for i in lists:
        for j in i:
            seznam.append(j)
    return seznam

print(flatten([[0, 2, 3], [1, 2, 3], [9, 10]]))
# [0, 2, 3, 1, 2, 3, 9, 10]

##################################
# 5.2.1. Prokládání textu textem
##################################
def dummy(text, rubbish):
    text1 = ""
    for x in text:
        text1 += x + rubbish
    return text1[:-2]

print(dummy('pampeliska', 'XX'))
# 'pXXaXXmXXpXXeXXlXXiXXsXXkXXa'

##################################
# 5.2.2. Zdvojení písmen
##################################
def duplication(text):
    text1 = "" 
    for x in text:
        text1 += x*2
    return text1

print(duplication("PYTHON"))
# PPYYTTHHOONN

##################################
# 5.2.3. Pozpátku
##################################
def reverse(text):
    text1 = ""
    for x in text:
        text1 = x + " " + text1
    return text1

print(reverse('ONMEJATEJOLSEH'))
# H E S L O J E T A J E M N O

##################################
# 5.2.4. Cenzura
##################################
def censorship(text):
    i = 1
    text1 = ""
    for x in text:
        i += 1
        if i % 2 == 0:
            text1 += x
        else:
            text1 += "X"
    return text1

print(censorship("Vinnetou: Jsem krestan."))
# VXnXeXoX:XJXeX XrXsXaX.

##################################
# 5.2.5. Počet A
##################################
def count_a(text):
    cnt = 0
    for x in text:
        if x == "a" or x == "A":
            cnt += 1
    return cnt

print(count_a('Liska Adelka'))
# 3

###################################
# 5.2.6. Znaky na stejných pozicích
###################################
def string_intersection(left, right):
    result = ""
    for i in range(min(len(left), len(right))):
        if left[i] == right[i]:
            result += left[i] + " "

    print(result)

string_intersection('ZIRAFA', 'KARAFA')
# R A F A
string_intersection('PES', 'KOCKA')
# (prazdny retezec)

###################################
# 5.2.7. Rozdíl v počtu a
###################################
def count_a(text):
    cnt = 0
    for x in text:
        if x == "a" or x == "A":
            cnt += 1
    return cnt

def diff_a(left, right):
    cnt_left = count_a(left)
    cnt_right = count_a(right)
    if cnt_left == cnt_right:
        print("Both strings contain same number of 'a'/'A':", cnt_left)
    elif cnt_left < cnt_right:
        print("First string contains less 'a'/'A':", cnt_right - cnt_left)
    else:
        print("Second string contains less 'a'/'A':", cnt_left - cnt_right)

diff_a("AstalaVistas", "Jehovista")
# Second string contains less 'a'/'A': 3
diff_a("", "")
# Both strings contain same number of 'a'/'A'

##################
# 5.2.8. Palindrom
##################
def palindrom(text):
    text = text.replace(" ","")
    delka = len(text)
    pulka = int(delka/2)
    i = 0
    j = delka - 1
    while i < pulka:
        if text[i] != text[j]:
            return False
        i += 1
        j -= 1
    return True

print(palindrom("k o b y l  a m a maly bok"))

######################
# 5.2.9. Hodnota slova
######################
def word_value(text):
    hod = 0
    for x in text:
        hod += ord(x) - 64
    return hod

print(word_value("AHOJ"))
# 34

########################
# 5.3.1. Caesarova šifra
########################
def caesar(text, klic):
    # uprava hodnoty posunuti - klice (musi byt mezi 0 a 25)
    while klic >= 26:
        klic -= 26
    while klic < 0:
        klic += 26

    text = text.upper()
    sifra = ""
    for letter in text:
        if letter >= "A" and letter <= "Z":
            # sifrujeme jenom pismena A - Z (ostatni beze zmeny) 
            letter = chr(ord(letter) + klic)
            if letter > "Z":
                letter = chr(ord(letter) - 26)
        sifra += letter
    return sifra

print(caesar('zirafa', 3))
# CLUDID
