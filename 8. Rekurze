#####################
# 8.1.1. Součet čísel
#####################
def series_sum(n):
    if n == 0:
        return 0
    else:
        soucet = n + series_sum(n-1)
        return soucet

print(series_sum(1))     # 1
print(series_sum(5))     # 15
print(series_sum(10))    # 55
print(series_sum(100))   # 5050

###########################
# 8.1.2. Prvek posloupnosti
###########################
def sequence(n):
    if n==0:
        res = 5
    else:
        res = 2*sequence(n-1) - 1

    return res

print(sequence(0))     # 5
print(sequence(1))     # 9
print(sequence(2))     # 17
print(sequence(3))     # 33

#############################
# 8.1.3. Zašroubování žárovky
#############################
def screwing(n):
    if n>0:
        print("twist")
        screwing(n-1)

screwing(3)
# Ocekavany vystup:
# twist
# twist
# twist

#############################
# 8.1.4. Součet seznamu čísel
#############################
def list_sum(numbers):
    sum = 0
    if len(numbers)>0:
        sum = sum + numbers[0] + list_sum(numbers[1:])
    return sum

print(list_sum([1, 8, 2, 0, 4, 2]))  # 17

############################
# 8.1.5. Binární vyhledávání
############################
def binary_search(value, numbers):
    return binarySearch(numbers, value, 0, len(numbers)-1)

def binarySearch(seznam, hodnota, vlevo, vpravo):
    if vpravo < vlevo:
        return False
    stred = (vpravo + vlevo) // 2
    if seznam[stred] == hodnota:
        return True
    if hodnota < seznam[stred]:
        return binarySearch(seznam, hodnota, vlevo, stred - 1)
    else:
        return binarySearch(seznam, hodnota, stred + 1, vpravo)
    
print(binary_search(5, [1, 2, 5, 8]))  # True
print(binary_search(4, [1, 2, 5, 8]))  # False
