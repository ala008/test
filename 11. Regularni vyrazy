#########################
# 11.1.1. Zpracování jmen
#########################
def process_names(input_filename, output_filename):
    input_file = open(input_filename, "r")  
    lines = input_file.readlines()
    input_file.close()

    output_file = open(output_filename, "w")
    for line in lines:
        output_file.write(str(line[0].upper()) + str(line[1:].lower()))
    output_file.close() 

process_names('NAMES.txt', 'names1.txt')

####################
# 11.2.1. Celá čísla
####################
import re

def is_integer(string):
    return bool(re.match(r'[+-]?\d+$', string))

print(is_integer("42"))         # True
print(is_integer("-42"))        # True
print(is_integer("4a2"))        # False

###############
# 11.2.2. Čísla
###############
import re

def is_number(string):
    return bool(re.match(r'[+-]?\d+(.\d+|)$', string))

print(is_number("42.01"))      # True
print(is_number("-42"))        # True
print(is_number("4.b"))        # False
print(is_number("42."))        # False

###############
# 11.2.3. Jména
###############
import re

# vypise radky, ktere splnuji zadany vzor
def search_in_file(pattern, file_name):
    with open(file_name) as f:
        lines = f.read().split('\n')        # nacteme vsechny radky do seznamu
        for line in lines:                  # prochazime radky a hledame shodu
            if re.search(pattern, line):
                print(line)

search_in_file(r'.*', 'names.txt')

print("\n1 - obsahuje oo")
search_in_file(r'.*oo.*', 'names.txt')

print("\n2 - alespon 3 znaky o")
search_in_file(r'.*o.*o.*o.*', 'names.txt')

print("\n3 - pouze samohlasky")
search_in_file(r'^[aeiouyAEIOUY]*$', 'names.txt')

print("\n4 - pouze souhlasky")
search_in_file(r'^[^aeiouyAEIOUY]*$', 'names.txt')

print("\n5 - začíná B nebo D, končí w nebo z")
search_in_file(r'^[BD].*[wz]$', 'names.txt')

print("\n6 - obsahuje bud inf nebo rec")
search_in_file(r'(inf|rec)', 'names.txt')
